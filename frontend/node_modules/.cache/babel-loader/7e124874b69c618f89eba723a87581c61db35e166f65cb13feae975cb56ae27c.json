{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/RegionSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport ThumbnailDisplay from \"./ThumbnailDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionSelector = ({\n  firstFrameUrl,\n  thumbnailUrls,\n  handleGridSelection\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCard_A, setSelectedSquaresHoleCard_A] = useState([]);\n  const [selectedSquaresHoleCard_B, setSelectedSquaresHoleCard_B] = useState([]);\n  const [selectedSquaresOpponent, setSelectedSquaresOpponent] = useState([]);\n  const [currentMode, setCurrentMode] = useState(\"Stack\");\n  const handleSquareClick = squareIndex => {\n    switch (currentMode) {\n      case \"Stack\":\n        if (selectedSquaresStack.includes(squareIndex)) {\n          setSelectedSquaresStack(selectedSquaresStack.filter(index => index !== squareIndex));\n        } else {\n          setSelectedSquaresStack([...selectedSquaresStack, squareIndex]);\n        }\n        break;\n      case \"Opponent\":\n        if (selectedSquaresOpponent.includes(squareIndex)) {\n          setSelectedSquaresOpponent(selectedSquaresOpponent.filter(index => index !== squareIndex));\n        } else {\n          setSelectedSquaresOpponent([...selectedSquaresOpponent, squareIndex]);\n        }\n        break;\n      case \"HoleCard_A\":\n        if (selectedSquaresHoleCard_A.includes(squareIndex)) {\n          setSelectedSquaresHoleCard_A(selectedSquaresHoleCard_A.filter(index => index !== squareIndex));\n        } else {\n          setSelectedSquaresHoleCard_A([...selectedSquaresHoleCard_A, squareIndex]);\n        }\n        break;\n      case \"HoleCard_B\":\n        if (selectedSquaresHoleCard_B.includes(squareIndex)) {\n          setSelectedSquaresHoleCard_B(selectedSquaresHoleCard_B.filter(index => index !== squareIndex));\n        } else {\n          setSelectedSquaresHoleCard_B([...selectedSquaresHoleCard_B, squareIndex]);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const handleClear = () => {\n    if (currentMode === \"Stack\") {\n      setSelectedSquaresStack([]);\n    } else if (currentMode === \"Opponent\") {\n      setSelectedSquaresOpponent([]);\n    } else if (currentMode === \"HoleCard_A\") {\n      setSelectedSquaresHoleCard_A([]);\n    } else if (currentMode === \"HoleCard_B\") {\n      setSelectedSquaresHoleCard_B([]);\n    } else {\n      console.error(\"Invalid mode:\", currentMode);\n    }\n  };\n  const handleSubmit = () => {\n    // Combine the selected squares from both modes into a data structure that the backend expects\n    const selectedSquares = [...selectedSquaresStack.map(index => ({\n      index,\n      type: \"Stack\"\n    })), ...selectedSquaresOpponent.map(index => ({\n      index,\n      type: \"Opponent\"\n    })), ...selectedSquaresHoleCard_A.map(index => ({\n      index,\n      type: \"HoleCard_A\"\n    })), ...selectedSquaresHoleCard_B.map(index => ({\n      index,\n      type: \"HoleCard_B\"\n    }))];\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares, currentMode); // Pass mode to the handler\n      navigate(`/data/${videoId}`);\n    } else {\n      alert(\"Please select at least one square.\");\n    }\n  };\n  const handleModeChange = mode => {\n    setCurrentMode(mode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"region-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt\",\n      children: currentMode === \"Stack\" ? \"Select the stack\" : currentMode === \"Opponent\" ? \"Select the opponent\" : currentMode === \"HoleCard_A\" ? \"Select Hole Card A\" : currentMode === \"HoleCard_B\" ? \"Select Hole Card B\" : \"Invalid mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"Stack\"),\n      children: \"Select Stack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"HoleCard_A\"),\n      children: \"Select Hole Card A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"HoleCard_B\"),\n      children: \"Select Hole Card B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"Opponent\"),\n      children: \"Select Opponent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      firstFrameUrl: firstFrameUrl,\n      selectedSquares: currentMode === \"Stack\" ? selectedSquaresStack : currentMode === \"Opponent\" ? selectedSquaresOpponent : currentMode === \"HoleCard_A\" ? selectedSquaresHoleCard_A : currentMode === \"HoleCard_B\" ? selectedSquaresHoleCard_B : [],\n      onSquareClick: handleSquareClick,\n      currentMode: currentMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThumbnailDisplay, {\n      thumbnailUrls: thumbnailUrls,\n      onThumbnailClick: handleSquareClick // Reusing the same click handler for thumbnails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      disabled: currentMode === \"Stack\" && selectedSquaresStack.length === 0 || currentMode === \"Opponent\" && selectedSquaresOpponent.length === 0 || currentMode === \"HoleCard_A\" && selectedSquaresHoleCard_A.length === 0 || currentMode === \"HoleCard_B\" && selectedSquaresHoleCard_B.length === 0,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionSelector, \"+ADoox8PcTwNsYwK5Fm66Gn2TRk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = RegionSelector;\nexport default RegionSelector;\nvar _c;\n$RefreshReg$(_c, \"RegionSelector\");","map":{"version":3,"names":["React","useState","ImageDisplay","ThumbnailDisplay","useNavigate","useParams","jsxDEV","_jsxDEV","RegionSelector","firstFrameUrl","thumbnailUrls","handleGridSelection","_s","navigate","videoId","selectedSquaresStack","setSelectedSquaresStack","selectedSquaresHoleCard_A","setSelectedSquaresHoleCard_A","selectedSquaresHoleCard_B","setSelectedSquaresHoleCard_B","selectedSquaresOpponent","setSelectedSquaresOpponent","currentMode","setCurrentMode","handleSquareClick","squareIndex","includes","filter","index","handleClear","console","error","handleSubmit","selectedSquares","map","type","length","alert","handleModeChange","mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSquareClick","onThumbnailClick","disabled","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/RegionSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport ThumbnailDisplay from \"./ThumbnailDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst RegionSelector = ({\n  firstFrameUrl,\n  thumbnailUrls,\n  handleGridSelection,\n}) => {\n  const navigate = useNavigate();\n\n  const { videoId } = useParams();\n\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCard_A, setSelectedSquaresHoleCard_A] = useState(\n    []\n  );\n  const [selectedSquaresHoleCard_B, setSelectedSquaresHoleCard_B] = useState(\n    []\n  );\n  const [selectedSquaresOpponent, setSelectedSquaresOpponent] = useState([]);\n  const [currentMode, setCurrentMode] = useState(\"Stack\");\n\n  const handleSquareClick = (squareIndex) => {\n    switch (currentMode) {\n      case \"Stack\":\n        if (selectedSquaresStack.includes(squareIndex)) {\n          setSelectedSquaresStack(\n            selectedSquaresStack.filter((index) => index !== squareIndex)\n          );\n        } else {\n          setSelectedSquaresStack([...selectedSquaresStack, squareIndex]);\n        }\n        break;\n      case \"Opponent\":\n        if (selectedSquaresOpponent.includes(squareIndex)) {\n          setSelectedSquaresOpponent(\n            selectedSquaresOpponent.filter((index) => index !== squareIndex)\n          );\n        } else {\n          setSelectedSquaresOpponent([...selectedSquaresOpponent, squareIndex]);\n        }\n        break;\n      case \"HoleCard_A\":\n        if (selectedSquaresHoleCard_A.includes(squareIndex)) {\n          setSelectedSquaresHoleCard_A(\n            selectedSquaresHoleCard_A.filter((index) => index !== squareIndex)\n          );\n        } else {\n          setSelectedSquaresHoleCard_A([\n            ...selectedSquaresHoleCard_A,\n            squareIndex,\n          ]);\n        }\n        break;\n      case \"HoleCard_B\":\n        if (selectedSquaresHoleCard_B.includes(squareIndex)) {\n          setSelectedSquaresHoleCard_B(\n            selectedSquaresHoleCard_B.filter((index) => index !== squareIndex)\n          );\n        } else {\n          setSelectedSquaresHoleCard_B([\n            ...selectedSquaresHoleCard_B,\n            squareIndex,\n          ]);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleClear = () => {\n    if (currentMode === \"Stack\") {\n      setSelectedSquaresStack([]);\n    } else if (currentMode === \"Opponent\") {\n      setSelectedSquaresOpponent([]);\n    } else if (currentMode === \"HoleCard_A\") {\n      setSelectedSquaresHoleCard_A([]);\n    } else if (currentMode === \"HoleCard_B\") {\n      setSelectedSquaresHoleCard_B([]);\n    } else {\n      console.error(\"Invalid mode:\", currentMode);\n    }\n  };\n\n  const handleSubmit = () => {\n    // Combine the selected squares from both modes into a data structure that the backend expects\n    const selectedSquares = [\n      ...selectedSquaresStack.map((index) => ({ index, type: \"Stack\" })),\n      ...selectedSquaresOpponent.map((index) => ({ index, type: \"Opponent\" })),\n      ...selectedSquaresHoleCard_A.map((index) => ({\n        index,\n        type: \"HoleCard_A\",\n      })),\n      ...selectedSquaresHoleCard_B.map((index) => ({\n        index,\n        type: \"HoleCard_B\",\n      })),\n    ];\n\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares, currentMode); // Pass mode to the handler\n      navigate(`/data/${videoId}`);\n    } else {\n      alert(\"Please select at least one square.\");\n    }\n  };\n\n  const handleModeChange = (mode) => {\n    setCurrentMode(mode);\n  };\n\n  return (\n    <div className=\"region-selector\">\n      <h3>Select Regions</h3>\n      <div className=\"prompt\">\n        {currentMode === \"Stack\"\n          ? \"Select the stack\"\n          : currentMode === \"Opponent\"\n          ? \"Select the opponent\"\n          : currentMode === \"HoleCard_A\"\n          ? \"Select Hole Card A\"\n          : currentMode === \"HoleCard_B\"\n          ? \"Select Hole Card B\"\n          : \"Invalid mode\"}\n      </div>\n      <button onClick={() => handleModeChange(\"Stack\")}>Select Stack</button>\n      <button onClick={() => handleModeChange(\"HoleCard_A\")}>\n        Select Hole Card A\n      </button>\n      <button onClick={() => handleModeChange(\"HoleCard_B\")}>\n        Select Hole Card B\n      </button>\n      <br />\n\n      <button onClick={() => handleModeChange(\"Opponent\")}>\n        Select Opponent\n      </button>\n      <button onClick={handleClear}>Clear</button>\n      <ImageDisplay\n        firstFrameUrl={firstFrameUrl}\n        selectedSquares={\n          currentMode === \"Stack\"\n            ? selectedSquaresStack\n            : currentMode === \"Opponent\"\n            ? selectedSquaresOpponent\n            : currentMode === \"HoleCard_A\"\n            ? selectedSquaresHoleCard_A\n            : currentMode === \"HoleCard_B\"\n            ? selectedSquaresHoleCard_B\n            : []\n        }\n        onSquareClick={handleSquareClick}\n        currentMode={currentMode}\n      />\n      <ThumbnailDisplay\n        thumbnailUrls={thumbnailUrls}\n        onThumbnailClick={handleSquareClick} // Reusing the same click handler for thumbnails\n      />\n      <button\n        className=\"submit-button\"\n        disabled={\n          (currentMode === \"Stack\" && selectedSquaresStack.length === 0) ||\n          (currentMode === \"Opponent\" &&\n            selectedSquaresOpponent.length === 0) ||\n          (currentMode === \"HoleCard_A\" &&\n            selectedSquaresHoleCard_A.length === 0) ||\n          (currentMode === \"HoleCard_B\" &&\n            selectedSquaresHoleCard_B.length === 0)\n        }\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default RegionSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}