{"ast":null,"code":"import _regeneratorRuntime from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";// utils/mockApiUtils.js\n// Mock function to simulate video upload\nexport var uploadVideo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(videoFile){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context.abrupt(\"return\",{videoId:\"mocked-video-id\"});case 3:case\"end\":return _context.stop();}},_callee);}));return function uploadVideo(_x){return _ref.apply(this,arguments);};}();// Mock function to simulate fetching analysis results from the backend\nexport var getAnalysisResults=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(videoId){var mockResults;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return new Promise(function(resolve){return setTimeout(resolve,1500);});case 2:// Mock analysis results\nmockResults={analysisType:\"OCR and Data Analysis\",videoId:videoId// ... other analysis data ...\n};return _context2.abrupt(\"return\",mockResults);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function getAnalysisResults(_x2){return _ref2.apply(this,arguments);};}();// Mock function to simulate getting the URL of the first frame\nexport var getFirstFrameUrl=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(videoId){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context3.abrupt(\"return\",process.env.PUBLIC_URL+\"/test_frame.jpg\");case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getFirstFrameUrl(_x3){return _ref3.apply(this,arguments);};}();// Mock function to simulate sending grid selection to the backend\nexport var sendGridSelection=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(selectedQuadrants){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context4.abrupt(\"return\",{success:true});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function sendGridSelection(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["uploadVideo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","videoFile","wrap","_callee$","_context","prev","next","Promise","resolve","setTimeout","abrupt","videoId","stop","_x","apply","arguments","getAnalysisResults","_ref2","_callee2","mockResults","_callee2$","_context2","analysisType","_x2","getFirstFrameUrl","_ref3","_callee3","_callee3$","_context3","process","env","PUBLIC_URL","_x3","sendGridSelection","_ref4","_callee4","selectedQuadrants","_callee4$","_context4","success","_x4"],"sources":["/root/Projects/linecheck/frontend/src/utils/mockApiUtils.js"],"sourcesContent":["// utils/mockApiUtils.js\n\n// Mock function to simulate video upload\nexport const uploadVideo = async (videoFile) => {\n  // Simulate uploading by waiting for a short time\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Return a mock response with a video ID\n  return { videoId: \"mocked-video-id\" };\n};\n\n// Mock function to simulate fetching analysis results from the backend\nexport const getAnalysisResults = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  // Mock analysis results\n  const mockResults = {\n    analysisType: \"OCR and Data Analysis\",\n    videoId: videoId,\n    // ... other analysis data ...\n  };\n\n  return mockResults;\n};\n\n// Mock function to simulate getting the URL of the first frame\nexport const getFirstFrameUrl = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Return mock first frame URL from the public folder\n  return process.env.PUBLIC_URL + \"/test_frame.jpg\";\n};\n\n// Mock function to simulate sending grid selection to the backend\nexport const sendGridSelection = async (selectedQuadrants) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Mock response indicating success\n  return { success: true };\n};\n"],"mappings":"8PAAA;AAEA;AACA,MAAO,IAAM,CAAAA,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,SAAS,SAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAEnC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,eAAAJ,QAAA,CAAAM,MAAA,UAGlD,CAAEC,OAAO,CAAE,iBAAkB,CAAC,0BAAAP,QAAA,CAAAQ,IAAA,MAAAZ,OAAA,GACtC,kBANY,CAAAL,WAAWA,CAAAkB,EAAA,SAAAjB,IAAA,CAAAkB,KAAA,MAAAC,SAAA,OAMvB,CAED;AACA,MAAO,IAAM,CAAAC,kBAAkB,6BAAAC,KAAA,CAAApB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmB,SAAOP,OAAO,MAAAQ,WAAA,QAAArB,mBAAA,GAAAI,IAAA,UAAAkB,UAAAC,SAAA,iBAAAA,SAAA,CAAAhB,IAAA,CAAAgB,SAAA,CAAAf,IAAA,SAAAe,SAAA,CAAAf,IAAA,SAExC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,QAEzD;AACMW,WAAW,CAAG,CAClBG,YAAY,CAAE,uBAAuB,CACrCX,OAAO,CAAEA,OACT;AACF,CAAC,QAAAU,SAAA,CAAAX,MAAA,UAEMS,WAAW,0BAAAE,SAAA,CAAAT,IAAA,MAAAM,QAAA,GACnB,kBAZY,CAAAF,kBAAkBA,CAAAO,GAAA,SAAAN,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAY9B,CAED;AACA,MAAO,IAAM,CAAAS,gBAAgB,6BAAAC,KAAA,CAAA5B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA2B,SAAOf,OAAO,SAAAb,mBAAA,GAAAI,IAAA,UAAAyB,UAAAC,SAAA,iBAAAA,SAAA,CAAAvB,IAAA,CAAAuB,SAAA,CAAAtB,IAAA,SAAAsB,SAAA,CAAAtB,IAAA,SAEtC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,eAAAoB,SAAA,CAAAlB,MAAA,UAGlDmB,OAAO,CAACC,GAAG,CAACC,UAAU,CAAG,iBAAiB,0BAAAH,SAAA,CAAAhB,IAAA,MAAAc,QAAA,GAClD,kBANY,CAAAF,gBAAgBA,CAAAQ,GAAA,SAAAP,KAAA,CAAAX,KAAA,MAAAC,SAAA,OAM5B,CAED;AACA,MAAO,IAAM,CAAAkB,iBAAiB,6BAAAC,KAAA,CAAArC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAoC,SAAOC,iBAAiB,SAAAtC,mBAAA,GAAAI,IAAA,UAAAmC,UAAAC,SAAA,iBAAAA,SAAA,CAAAjC,IAAA,CAAAiC,SAAA,CAAAhC,IAAA,SAAAgC,SAAA,CAAAhC,IAAA,SAEjD,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,eAAA8B,SAAA,CAAA5B,MAAA,UAGlD,CAAE6B,OAAO,CAAE,IAAK,CAAC,0BAAAD,SAAA,CAAA1B,IAAA,MAAAuB,QAAA,GACzB,kBANY,CAAAF,iBAAiBA,CAAAO,GAAA,SAAAN,KAAA,CAAApB,KAAA,MAAAC,SAAA,OAM7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}