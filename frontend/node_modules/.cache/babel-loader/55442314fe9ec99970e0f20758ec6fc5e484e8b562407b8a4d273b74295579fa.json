{"ast":null,"code":"import _regeneratorRuntime from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";// utils/mockApiUtils.js\nvar BASE_URL='http://localhost:5000';// Update this with your actual backend URL\n// Function to generate a unique video id\nexport var generateVideoId=function generateVideoId(){var numbers=\"0123456789\";// Generate a random 6 digit number\nvar videoId=\"\";for(var i=0;i<6;i++){videoId+=numbers.charAt(Math.floor(Math.random()*numbers.length));}return videoId;};// Mock function to simulate video upload and return a video_id\nexport var uploadVideo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(videoFile){var formData,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return setTimeout(resolve,1500);});case 2:// Create a FormData object to send the video file\nformData=new FormData();formData.append('video',videoFile);// Simulate sending a POST request to the backend's video upload endpoint\n_context.prev=4;_context.next=7;return fetch(\"\".concat(BASE_URL,\"/upload_video\"),{method:'POST',body:formData});case 7:response=_context.sent;if(response.ok){_context.next=10;break;}throw new Error('Video upload failed');case 10:_context.next=12;return response.json();case 12:data=_context.sent;if(!data.success){_context.next=17;break;}return _context.abrupt(\"return\",{success:true,videoId:data.video_id});case 17:throw new Error('Return of videoId failed');case 18:_context.next=24;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](4);console.error(_context.t0);return _context.abrupt(\"return\",{success:false,videoId:null});case 24:case\"end\":return _context.stop();}},_callee,null,[[4,20]]);}));return function uploadVideo(_x){return _ref.apply(this,arguments);};}();// Mock function to simulate fetching analysis results from the backend\nexport var getAnalysisResults=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(videoId){var mockResults;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return new Promise(function(resolve){return setTimeout(resolve,1500);});case 2:// Mock analysis results\nmockResults={analysisType:\"OCR and Data Analysis\",videoId:videoId// ... other analysis data ...\n};return _context2.abrupt(\"return\",mockResults);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function getAnalysisResults(_x2){return _ref2.apply(this,arguments);};}();export var getFirstFrameUrl=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(videoId){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context3.abrupt(\"return\",\"\".concat(BASE_URL,\"/images/\").concat(videoId,\"/frame.jpg\"));case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getFirstFrameUrl(_x3){return _ref3.apply(this,arguments);};}();// Mock function to simulate sending grid selection to the backend\nexport var sendGridSelection=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(videoId,selectedQuadrants){var response,data;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:_context4.prev=2;_context4.next=5;return fetch(\"\".concat(BASE_URL,\"/submit_selection\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({videoId:videoId,selectedQuadrants:selectedQuadrants})// Include videoId in the JSON payload\n});case 5:response=_context4.sent;if(response.ok){_context4.next=8;break;}throw new Error('Failed to send grid selection');case 8:_context4.next=10;return response.json();case 10:data=_context4.sent;return _context4.abrupt(\"return\",data);case 14:_context4.prev=14;_context4.t0=_context4[\"catch\"](2);console.error('Error sending grid selection:',_context4.t0);return _context4.abrupt(\"return\",{success:false,error:_context4.t0.message});case 18:case\"end\":return _context4.stop();}},_callee4,null,[[2,14]]);}));return function sendGridSelection(_x4,_x5){return _ref4.apply(this,arguments);};}();export var getSelectionData=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(videoId){var response,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"\".concat(BASE_URL,\"/get_selection/\").concat(videoId));case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:data=_context5.sent;console.log('Fetched selection data:',data);return _context5.abrupt(\"return\",data);case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](0);console.error('Error fetching selection data:',_context5.t0);return _context5.abrupt(\"return\",null);case 15:case\"end\":return _context5.stop();}},_callee5,null,[[0,11]]);}));return function getSelectionData(_x6){return _ref5.apply(this,arguments);};}();","map":{"version":3,"names":["BASE_URL","generateVideoId","numbers","videoId","i","charAt","Math","floor","random","length","uploadVideo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","videoFile","formData","response","data","wrap","_callee$","_context","prev","next","Promise","resolve","setTimeout","FormData","append","fetch","concat","method","body","sent","ok","Error","json","success","abrupt","video_id","t0","console","error","stop","_x","apply","arguments","getAnalysisResults","_ref2","_callee2","mockResults","_callee2$","_context2","analysisType","_x2","getFirstFrameUrl","_ref3","_callee3","_callee3$","_context3","_x3","sendGridSelection","_ref4","_callee4","selectedQuadrants","_callee4$","_context4","headers","JSON","stringify","message","_x4","_x5","getSelectionData","_ref5","_callee5","_callee5$","_context5","log","_x6"],"sources":["/root/Projects/linecheck/frontend/src/utils/mockApiUtils.js"],"sourcesContent":["// utils/mockApiUtils.js\n\nconst BASE_URL = 'http://localhost:5000'; // Update this with your actual backend URL\n\n// Function to generate a unique video id\nexport const generateVideoId = () => {\n  const numbers = \"0123456789\";\n\n  // Generate a random 6 digit number\n  let videoId = \"\";\n  for (let i = 0; i < 6; i++) {\n    videoId += numbers.charAt(Math.floor(Math.random() * numbers.length));\n  }\n\n  return videoId;\n};\n\n// Mock function to simulate video upload and return a video_id\nexport const uploadVideo = async (videoFile) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  // Create a FormData object to send the video file\n  const formData = new FormData();\n  formData.append('video', videoFile);\n\n  // Simulate sending a POST request to the backend's video upload endpoint\n  try {\n    const response = await fetch(`${BASE_URL}/upload_video`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error('Video upload failed');\n    }\n\n    const data = await response.json();\n    \n    if (data.success) {\n      return { success: true, videoId: data.video_id }; // Update the key to \"video_id\"\n    } else {\n      throw new Error('Return of videoId failed');\n    }\n  } catch (error) {\n    console.error(error);\n    return { success: false, videoId: null };\n  }\n};\n\n// Mock function to simulate fetching analysis results from the backend\nexport const getAnalysisResults = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  // Mock analysis results\n  const mockResults = {\n    analysisType: \"OCR and Data Analysis\",\n    videoId: videoId,\n    // ... other analysis data ...\n  };\n\n  return mockResults;\n};\n\nexport const getFirstFrameUrl = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Return URL to fetch image from the backend\n  return `${BASE_URL}/images/${videoId}/frame.jpg`; // Assuming 'frame.jpg' is the filename of the first frame\n};\n\n// Mock function to simulate sending grid selection to the backend\nexport const sendGridSelection = async (videoId, selectedQuadrants) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  try {\n    const response = await fetch(`${BASE_URL}/submit_selection`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ videoId, selectedQuadrants }), // Include videoId in the JSON payload\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to send grid selection');\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error sending grid selection:', error);\n    return { success: false, error: error.message };\n  }\n};\n\nexport const getSelectionData = async (videoId) => {\n  try {\n    const response = await fetch(`${BASE_URL}/get_selection/${videoId}`);\n    const data = await response.json();\n    console.log('Fetched selection data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching selection data:', error);\n    return null;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}