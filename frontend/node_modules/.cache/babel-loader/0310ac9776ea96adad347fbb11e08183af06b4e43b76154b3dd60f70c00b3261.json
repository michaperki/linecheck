{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/pages/AnalysisPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\nimport RegionSelector from \"../components/RegionSelector\";\nimport ImageDisplay from \"../components/ImageDisplay\";\nimport { getFirstFrameUrl } from \"../utils/mockApiUtils\"; // Import the updated mock API function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnalysisPage({\n  firstFrameUrl,\n  handleGridSelection\n}) {\n  _s();\n  const {\n    videoId\n  } = useParams(); // Get the videoId from URL parameters\n\n  useEffect(() => {\n    // Fetch the first frame URL when the component mounts\n    fetchFirstFrameUrl();\n  }, [videoId]); // Fetch the first frame URL whenever the videoId changes\n\n  const fetchFirstFrameUrl = async () => {\n    try {\n      // Simulate fetching the first frame URL from the API\n      const response = await getFirstFrameUrl(videoId);\n\n      // Set the first frame URL in state\n      setFirstFrameUrl(response);\n    } catch (error) {\n      console.error(\"Error fetching first frame URL:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analysis Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegionSelector, {\n      firstFrameUrl: firstFrameUrl,\n      handleGridSelection: handleGridSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(AnalysisPage, \"Uar2BbWcvbdlTy34LlkSU04cyrM=\", false, function () {\n  return [useParams];\n});\n_c = AnalysisPage;\nexport default AnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","RegionSelector","ImageDisplay","getFirstFrameUrl","jsxDEV","_jsxDEV","AnalysisPage","firstFrameUrl","handleGridSelection","_s","videoId","fetchFirstFrameUrl","response","setFirstFrameUrl","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/pages/AnalysisPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Import useParams\nimport RegionSelector from \"../components/RegionSelector\";\nimport ImageDisplay from \"../components/ImageDisplay\";\nimport { getFirstFrameUrl } from \"../utils/mockApiUtils\"; // Import the updated mock API function\n\nfunction AnalysisPage({ firstFrameUrl, handleGridSelection }) {\n  const { videoId } = useParams(); // Get the videoId from URL parameters\n\n  useEffect(() => {\n    // Fetch the first frame URL when the component mounts\n    fetchFirstFrameUrl();\n  }, [videoId]); // Fetch the first frame URL whenever the videoId changes\n\n  const fetchFirstFrameUrl = async () => {\n    try {\n      // Simulate fetching the first frame URL from the API\n      const response = await getFirstFrameUrl(videoId);\n\n      // Set the first frame URL in state\n      setFirstFrameUrl(response);\n    } catch (error) {\n      console.error(\"Error fetching first frame URL:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Analysis Page</h1>\n      {/* Pass the firstFrameUrl to RegionSelector */}\n      <RegionSelector\n        firstFrameUrl={firstFrameUrl}\n        handleGridSelection={handleGridSelection}\n      />\n    </div>\n  );\n}\n\nexport default AnalysisPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,gBAAgB,QAAQ,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,YAAYA,CAAC;EAAEC,aAAa;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM;IAAEC;EAAQ,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjCF,SAAS,CAAC,MAAM;IACd;IACAa,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMT,gBAAgB,CAACO,OAAO,CAAC;;MAEhD;MACAG,gBAAgB,CAACD,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,oBACET,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtBf,OAAA,CAACJ,cAAc;MACbM,aAAa,EAAEA,aAAc;MAC7BC,mBAAmB,EAAEA;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CA9BQH,YAAY;EAAA,QACCN,SAAS;AAAA;AAAAqB,EAAA,GADtBf,YAAY;AAgCrB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}