{"ast":null,"code":"import _regeneratorRuntime from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";// utils/mockApiUtils.js\n// Function to generate a unique video id\nexport var generateVideoId=function generateVideoId(){var numbers=\"0123456789\";// Generate a random 6 digit number\nvar videoId=\"\";for(var i=0;i<6;i++){videoId+=numbers.charAt(Math.floor(Math.random()*numbers.length));}return videoId;};// Mock function to simulate video upload and return a video_id\nexport var uploadVideo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(videoFile){var videoId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve){return setTimeout(resolve,1500);});case 2:// Mock response with a generated video_id\nvideoId=generateVideoId();// You can create a function to generate unique video ids\nreturn _context.abrupt(\"return\",{success:true,videoId:videoId});case 4:case\"end\":return _context.stop();}},_callee);}));return function uploadVideo(_x){return _ref.apply(this,arguments);};}();// Mock function to simulate fetching analysis results from the backend\nexport var getAnalysisResults=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(videoId){var mockResults;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return new Promise(function(resolve){return setTimeout(resolve,1500);});case 2:// Mock analysis results\nmockResults={analysisType:\"OCR and Data Analysis\",videoId:videoId// ... other analysis data ...\n};return _context2.abrupt(\"return\",mockResults);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function getAnalysisResults(_x2){return _ref2.apply(this,arguments);};}();var BASE_URL='http://localhost:5000';// Update this with your actual backend URL\nexport var getFirstFrameUrl=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(videoId){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context3.abrupt(\"return\",\"\".concat(BASE_URL,\"/images/\").concat(videoId,\".jpg\"));case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getFirstFrameUrl(_x3){return _ref3.apply(this,arguments);};}();// Mock function to simulate sending grid selection to the backend\nexport var sendGridSelection=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(selectedQuadrants){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return new Promise(function(resolve){return setTimeout(resolve,1000);});case 2:return _context4.abrupt(\"return\",{success:true});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function sendGridSelection(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"names":["generateVideoId","numbers","videoId","i","charAt","Math","floor","random","length","uploadVideo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","videoFile","wrap","_callee$","_context","prev","next","Promise","resolve","setTimeout","abrupt","success","stop","_x","apply","arguments","getAnalysisResults","_ref2","_callee2","mockResults","_callee2$","_context2","analysisType","_x2","BASE_URL","getFirstFrameUrl","_ref3","_callee3","_callee3$","_context3","concat","_x3","sendGridSelection","_ref4","_callee4","selectedQuadrants","_callee4$","_context4","_x4"],"sources":["/root/Projects/linecheck/frontend/src/utils/mockApiUtils.js"],"sourcesContent":["// utils/mockApiUtils.js\n\n// Function to generate a unique video id\nexport const generateVideoId = () => {\n  const numbers = \"0123456789\";\n\n  // Generate a random 6 digit number\n  let videoId = \"\";\n  for (let i = 0; i < 6; i++) {\n    videoId += numbers.charAt(Math.floor(Math.random() * numbers.length));\n  }\n\n  return videoId;\n};\n\n// Mock function to simulate video upload and return a video_id\nexport const uploadVideo = async (videoFile) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  // Mock response with a generated video_id\n  const videoId = generateVideoId(); // You can create a function to generate unique video ids\n  return { success: true, videoId };\n};\n\n// Mock function to simulate fetching analysis results from the backend\nexport const getAnalysisResults = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  // Mock analysis results\n  const mockResults = {\n    analysisType: \"OCR and Data Analysis\",\n    videoId: videoId,\n    // ... other analysis data ...\n  };\n\n  return mockResults;\n};\n\nconst BASE_URL = 'http://localhost:5000'; // Update this with your actual backend URL\n\nexport const getFirstFrameUrl = async (videoId) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Return URL to fetch image from the backend\n  return `${BASE_URL}/images/${videoId}.jpg`;\n};\n\n// Mock function to simulate sending grid selection to the backend\nexport const sendGridSelection = async (selectedQuadrants) => {\n  // Simulate a delay\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n\n  // Mock response indicating success\n  return { success: true };\n};\n"],"mappings":"8PAAA;AAEA;AACA,MAAO,IAAM,CAAAA,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAA,CAAS,CACnC,GAAM,CAAAC,OAAO,CAAG,YAAY,CAE5B;AACA,GAAI,CAAAC,OAAO,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC1BD,OAAO,EAAID,OAAO,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGN,OAAO,CAACO,MAAM,CAAC,CAAC,CACvE,CAEA,MAAO,CAAAN,OAAO,CAChB,CAAC,CAED;AACA,MAAO,IAAM,CAAAO,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,SAAS,MAAAb,OAAA,QAAAU,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAEnC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,QAEzD;AACMpB,OAAO,CAAGF,eAAe,CAAC,CAAC,CAAE;AAAA,OAAAkB,QAAA,CAAAM,MAAA,UAC5B,CAAEC,OAAO,CAAE,IAAI,CAAEvB,OAAO,CAAPA,OAAQ,CAAC,0BAAAgB,QAAA,CAAAQ,IAAA,MAAAZ,OAAA,GAClC,kBAPY,CAAAL,WAAWA,CAAAkB,EAAA,SAAAjB,IAAA,CAAAkB,KAAA,MAAAC,SAAA,OAOvB,CAED;AACA,MAAO,IAAM,CAAAC,kBAAkB,6BAAAC,KAAA,CAAApB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmB,SAAO9B,OAAO,MAAA+B,WAAA,QAAArB,mBAAA,GAAAI,IAAA,UAAAkB,UAAAC,SAAA,iBAAAA,SAAA,CAAAhB,IAAA,CAAAgB,SAAA,CAAAf,IAAA,SAAAe,SAAA,CAAAf,IAAA,SAExC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,QAEzD;AACMW,WAAW,CAAG,CAClBG,YAAY,CAAE,uBAAuB,CACrClC,OAAO,CAAEA,OACT;AACF,CAAC,QAAAiC,SAAA,CAAAX,MAAA,UAEMS,WAAW,0BAAAE,SAAA,CAAAT,IAAA,MAAAM,QAAA,GACnB,kBAZY,CAAAF,kBAAkBA,CAAAO,GAAA,SAAAN,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAY9B,CAED,GAAM,CAAAS,QAAQ,CAAG,uBAAuB,CAAE;AAE1C,MAAO,IAAM,CAAAC,gBAAgB,6BAAAC,KAAA,CAAA7B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA4B,SAAOvC,OAAO,SAAAU,mBAAA,GAAAI,IAAA,UAAA0B,UAAAC,SAAA,iBAAAA,SAAA,CAAAxB,IAAA,CAAAwB,SAAA,CAAAvB,IAAA,SAAAuB,SAAA,CAAAvB,IAAA,SAEtC,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,eAAAqB,SAAA,CAAAnB,MAAA,aAAAoB,MAAA,CAG/CN,QAAQ,aAAAM,MAAA,CAAW1C,OAAO,kCAAAyC,SAAA,CAAAjB,IAAA,MAAAe,QAAA,GACrC,kBANY,CAAAF,gBAAgBA,CAAAM,GAAA,SAAAL,KAAA,CAAAZ,KAAA,MAAAC,SAAA,OAM5B,CAED;AACA,MAAO,IAAM,CAAAiB,iBAAiB,6BAAAC,KAAA,CAAApC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmC,SAAOC,iBAAiB,SAAArC,mBAAA,GAAAI,IAAA,UAAAkC,UAAAC,SAAA,iBAAAA,SAAA,CAAAhC,IAAA,CAAAgC,SAAA,CAAA/B,IAAA,SAAA+B,SAAA,CAAA/B,IAAA,SAEjD,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,QAAK,CAAAC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,GAAC,eAAA6B,SAAA,CAAA3B,MAAA,UAGlD,CAAEC,OAAO,CAAE,IAAK,CAAC,0BAAA0B,SAAA,CAAAzB,IAAA,MAAAsB,QAAA,GACzB,kBANY,CAAAF,iBAAiBA,CAAAM,GAAA,SAAAL,KAAA,CAAAnB,KAAA,MAAAC,SAAA,OAM7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}