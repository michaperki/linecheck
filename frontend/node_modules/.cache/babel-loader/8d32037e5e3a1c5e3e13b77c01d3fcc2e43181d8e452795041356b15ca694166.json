{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/RegionSelector.js\",\n  _s = $RefreshSig$();\n// RegionSelector.js\nimport React, { useState } from 'react';\nimport ImageDisplay from './ImageDisplay';\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionSelector = ({\n  firstFrameUrl,\n  handleGridSelection\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  const [mode, setMode] = useState('stack'); // Default mode is 'stack'\n  const [selectedSquares, setSelectedSquares] = useState([]);\n  const handleModeChange = newMode => {\n    setSelectedSquares([]);\n    setMode(newMode);\n  };\n  const clearSelectedSquares = () => {\n    setSelectedSquares([]);\n  };\n  const handleSquareClick = squareIndex => {\n    if (selectedSquares.includes(squareIndex)) {\n      setSelectedSquares(selectedSquares.filter(index => index !== squareIndex));\n    } else {\n      setSelectedSquares([...selectedSquares, squareIndex]);\n    }\n  };\n  const handleSubmit = () => {\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares);\n      navigate(`/data/${videoId}`);\n    } else {\n      alert('Please select at least one square.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"region-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      firstFrameUrl: firstFrameUrl,\n      selectedSquares: selectedSquares,\n      onSquareClick: handleSquareClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-button\",\n      disabled: selectedSquares.length === 0,\n      onClick: clearSelectedSquares,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      disabled: selectedSquares.length === 0,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionSelector, \"6wTerTPk0tTrgF6q1mrilArwApI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = RegionSelector;\nexport default RegionSelector;\nvar _c;\n$RefreshReg$(_c, \"RegionSelector\");","map":{"version":3,"names":["React","useState","ImageDisplay","useNavigate","useParams","jsxDEV","_jsxDEV","RegionSelector","firstFrameUrl","handleGridSelection","_s","navigate","videoId","mode","setMode","selectedSquares","setSelectedSquares","handleModeChange","newMode","clearSelectedSquares","handleSquareClick","squareIndex","includes","filter","index","handleSubmit","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSquareClick","disabled","onClick","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/RegionSelector.js"],"sourcesContent":["// RegionSelector.js\nimport React, { useState } from 'react';\nimport ImageDisplay from './ImageDisplay';\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\n\nconst RegionSelector = ({ firstFrameUrl, handleGridSelection }) => {\n  const navigate = useNavigate();\n\n  const { videoId } = useParams();\n\n  const [mode, setMode] = useState('stack'); // Default mode is 'stack'\n  const [selectedSquares, setSelectedSquares] = useState([]);\n\n  const handleModeChange = (newMode) => {\n    setSelectedSquares([]);\n    setMode(newMode);\n  };\n  \n  const clearSelectedSquares = () => {\n    setSelectedSquares([]);\n  };\n\n  const handleSquareClick = (squareIndex) => {\n    if (selectedSquares.includes(squareIndex)) {\n      setSelectedSquares(selectedSquares.filter(index => index !== squareIndex));\n    } else {\n      setSelectedSquares([...selectedSquares, squareIndex]);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares);\n      navigate(`/data/${videoId}`);\n    } else {\n      alert('Please select at least one square.');\n    }\n  };\n\n  return (\n    <div className=\"region-selector\">\n      <h3>Select Regions</h3>\n      <ImageDisplay\n        firstFrameUrl={firstFrameUrl}\n        selectedSquares={selectedSquares}\n        onSquareClick={handleSquareClick}\n      />\n      <button\n        className=\"clear-button\"\n        disabled={selectedSquares.length === 0}\n        onClick={clearSelectedSquares}\n      >\n        Clear\n      </button>\n      <br />\n      <button\n        className=\"submit-button\"\n        disabled={selectedSquares.length === 0}\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default RegionSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}