{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/ImageDisplay.js\";\n// ImageDisplay.js\nimport React from \"react\";\nimport \"./ImageDisplay.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDisplay = ({\n  firstFrameUrl,\n  selectedSquares,\n  onSquareClick\n}) => {\n  const numRows = 120;\n  const numCols = 120;\n  const isSquareSelected = (row, col) => selectedSquares.includes(row * numCols + col);\n  const handleSquareClick = (row, col) => {\n    const squareIndex = row * numCols + col;\n    onSquareClick(squareIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: Array.from({\n        length: numRows\n      }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: Array.from({\n          length: numCols\n        }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid-square ${isSquareSelected(rowIndex, colIndex) ? \"selected\" : \"\"}`,\n          onClick: () => handleSquareClick(rowIndex, colIndex)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: firstFrameUrl,\n      alt: \"First Frame\",\n      className: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ImageDisplay;\nexport default ImageDisplay;\nvar _c;\n$RefreshReg$(_c, \"ImageDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageDisplay","firstFrameUrl","selectedSquares","onSquareClick","numRows","numCols","isSquareSelected","row","col","includes","handleSquareClick","squareIndex","className","children","Array","from","length","map","_","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/ImageDisplay.js"],"sourcesContent":["// ImageDisplay.js\nimport React from \"react\";\nimport \"./ImageDisplay.css\";\n\nconst ImageDisplay = ({ firstFrameUrl, selectedSquares, onSquareClick }) => {\n  const numRows = 120;\n  const numCols = 120;\n\n  const isSquareSelected = (row, col) =>\n    selectedSquares.includes(row * numCols + col);\n\n  const handleSquareClick = (row, col) => {\n    const squareIndex = row * numCols + col;\n    onSquareClick(squareIndex);\n  };\n\n  return (\n    <div className=\"image-display\">\n      <div className=\"grid-container\">\n        {Array.from({ length: numRows }).map((_, rowIndex) => (\n          <div key={rowIndex} className=\"grid-row\">\n            {Array.from({ length: numCols }).map((_, colIndex) => (\n              <div\n                key={colIndex}\n                className={`grid-square ${\n                  isSquareSelected(rowIndex, colIndex) ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n      <img src={firstFrameUrl} alt=\"First Frame\" className=\"img\" />\n    </div>\n  );\n};\n\nexport default ImageDisplay;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAc,CAAC,KAAK;EAC1E,MAAMC,OAAO,GAAG,GAAG;EACnB,MAAMC,OAAO,GAAG,GAAG;EAEnB,MAAMC,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAChCN,eAAe,CAACO,QAAQ,CAACF,GAAG,GAAGF,OAAO,GAAGG,GAAG,CAAC;EAE/C,MAAME,iBAAiB,GAAGA,CAACH,GAAG,EAAEC,GAAG,KAAK;IACtC,MAAMG,WAAW,GAAGJ,GAAG,GAAGF,OAAO,GAAGG,GAAG;IACvCL,aAAa,CAACQ,WAAW,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEZ;MAAQ,CAAC,CAAC,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,kBAC/CpB,OAAA;QAAoBa,SAAS,EAAC,UAAU;QAAAC,QAAA,EACrCC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAEX;QAAQ,CAAC,CAAC,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEE,QAAQ,kBAC/CrB,OAAA;UAEEa,SAAS,EAAG,eACVN,gBAAgB,CAACa,QAAQ,EAAEC,QAAQ,CAAC,GAAG,UAAU,GAAG,EACrD,EAAE;UACHC,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACS,QAAQ,EAAEC,QAAQ;QAAE,GAJhDA,QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACF;MAAC,GATMN,QAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAK2B,GAAG,EAAEzB,aAAc;MAAC0B,GAAG,EAAC,aAAa;MAACf,SAAS,EAAC;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACG,EAAA,GAhCI5B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}