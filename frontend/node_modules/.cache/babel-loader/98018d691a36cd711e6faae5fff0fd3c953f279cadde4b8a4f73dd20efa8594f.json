{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/RegionSelector.js\",\n  _s = $RefreshSig$();\n// RegionSelector.js\nimport React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionSelector = ({\n  firstFrameUrl,\n  handleGridSelection\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCards, setSelectedSquaresHoleCards] = useState([]);\n  const handleModeChange = newMode => {\n    setSelectedSquares([]);\n    setMode(newMode);\n  };\n  const clearSelectedSquares = () => {\n    setSelectedSquares([]);\n  };\n  const handleSquareClick = squareIndex => {\n    if (selectedSquares.includes(squareIndex)) {\n      setSelectedSquares(selectedSquares.filter(index => index !== squareIndex));\n    } else {\n      setSelectedSquares([...selectedSquares, squareIndex]);\n    }\n  };\n  const handleSubmit = () => {\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares);\n      navigate(`/data/${videoId}`);\n    } else {\n      alert(\"Please select at least one square.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"region-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-button ${mode === \"stack\" ? \"active\" : \"\"}`,\n        onClick: () => handleModeChange(\"stack\"),\n        children: \"Select Stack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode-button ${mode === \"holeCards\" ? \"active\" : \"\"}`,\n        onClick: () => handleModeChange(\"holeCards\"),\n        children: \"Select Hole Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      firstFrameUrl: firstFrameUrl,\n      selectedSquares: selectedSquares,\n      onSquareClick: handleSquareClick,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-button\",\n      disabled: selectedSquares.length === 0,\n      onClick: clearSelectedSquares,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      disabled: selectedSquares.length === 0,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionSelector, \"KulW+DJf1nNhstjO/+Ng8Xmq+2E=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = RegionSelector;\nexport default RegionSelector;\nvar _c;\n$RefreshReg$(_c, \"RegionSelector\");","map":{"version":3,"names":["React","useState","ImageDisplay","useNavigate","useParams","jsxDEV","_jsxDEV","RegionSelector","firstFrameUrl","handleGridSelection","_s","navigate","videoId","selectedSquaresStack","setSelectedSquaresStack","selectedSquaresHoleCards","setSelectedSquaresHoleCards","handleModeChange","newMode","setSelectedSquares","setMode","clearSelectedSquares","handleSquareClick","squareIndex","selectedSquares","includes","filter","index","handleSubmit","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","onClick","onSquareClick","disabled","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/RegionSelector.js"],"sourcesContent":["// RegionSelector.js\nimport React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst RegionSelector = ({ firstFrameUrl, handleGridSelection }) => {\n  const navigate = useNavigate();\n\n  const { videoId } = useParams();\n\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCards, setSelectedSquaresHoleCards] = useState([]);\n \n  const handleModeChange = (newMode) => {\n    setSelectedSquares([]);\n    setMode(newMode);\n  };\n\n  const clearSelectedSquares = () => {\n    setSelectedSquares([]);\n  };\n\n  const handleSquareClick = (squareIndex) => {\n    if (selectedSquares.includes(squareIndex)) {\n      setSelectedSquares(\n        selectedSquares.filter((index) => index !== squareIndex)\n      );\n    } else {\n      setSelectedSquares([...selectedSquares, squareIndex]);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares);\n      navigate(`/data/${videoId}`);\n    } else {\n      alert(\"Please select at least one square.\");\n    }\n  };\n\n  return (\n    <div className=\"region-selector\">\n      <h3>Select Regions</h3>\n      <div className=\"mode-buttons\">\n        <button\n          className={`mode-button ${mode === \"stack\" ? \"active\" : \"\"}`}\n          onClick={() => handleModeChange(\"stack\")}\n        >\n          Select Stack\n        </button>\n        <button\n          className={`mode-button ${mode === \"holeCards\" ? \"active\" : \"\"}`}\n          onClick={() => handleModeChange(\"holeCards\")}\n        >\n          Select Hole Cards\n        </button>\n      </div>\n      <ImageDisplay\n        firstFrameUrl={firstFrameUrl}\n        selectedSquares={selectedSquares}\n        onSquareClick={handleSquareClick}\n        mode={mode}\n      />\n      <button\n        className=\"clear-button\"\n        disabled={selectedSquares.length === 0}\n        onClick={clearSelectedSquares}\n      >\n        Clear\n      </button>\n      <br />\n      <button\n        className=\"submit-button\"\n        disabled={selectedSquares.length === 0}\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default RegionSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}