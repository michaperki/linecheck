{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/VideoPreviewComponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPreviewComponent({\n  videoURL\n}) {\n  _s();\n  // Renders an image with the processed frame\n  // Fetch the image from the backend\n  // Use the videoURL prop to construct the URL\n  // Use the correct HTTP method\n  // Use the correct URL\n  // Use the correct property from the response\n\n  const [processedFramePath, setProcessedFramePath] = useState(null);\n  const fetchProcessedFrameImage = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/processed_videos/${videoURL}`, {\n        method: \"GET\"\n      });\n      console.log(response);\n      if (response.ok) {\n        const processedFrameURL = URL.createObjectURL(await response.blob());\n        setProcessedFramePath(processedFrameURL);\n      } else {\n        console.error(\"Failed to fetch processed frame image.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching processed frame image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-preview-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: fetchProcessedFrameImage,\n      alt: \"Processed frame\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPreviewComponent, \"zkb7MDWvgLRSS+zRphnFekB9h8k=\");\n_c = VideoPreviewComponent;\nexport default VideoPreviewComponent;\nvar _c;\n$RefreshReg$(_c, \"VideoPreviewComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VideoPreviewComponent","videoURL","_s","processedFramePath","setProcessedFramePath","useState","fetchProcessedFrameImage","response","fetch","method","console","log","ok","processedFrameURL","URL","createObjectURL","blob","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/VideoPreviewComponent.js"],"sourcesContent":["import React from 'react';\n\nfunction VideoPreviewComponent({ videoURL }) {\n  // Renders an image with the processed frame\n  // Fetch the image from the backend\n  // Use the videoURL prop to construct the URL\n  // Use the correct HTTP method\n  // Use the correct URL\n  // Use the correct property from the response\n\n  const [processedFramePath, setProcessedFramePath] = useState(null);\n\n  const fetchProcessedFrameImage = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:5000/processed_videos/${videoURL}`,\n        {\n          method: \"GET\",\n        }\n      );\n      console.log(response);\n\n      if (response.ok) {\n        const processedFrameURL = URL.createObjectURL(await response.blob());\n        setProcessedFramePath(processedFrameURL);\n      } else {\n        console.error(\"Failed to fetch processed frame image.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching processed frame image:\", error);\n    }\n  }\n\n  return (\n    <div className=\"video-preview-component\">\n      <h2>Video Preview</h2>\n      <img src={fetchProcessedFrameImage} alt=\"Processed frame\" />\n    </div>\n  );\n}\n\nexport default VideoPreviewComponent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,qBAAqBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CAAyCP,QAAS,EAAC,EACpD;QACEQ,MAAM,EAAE;MACV,CACF,CAAC;MACDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,iBAAiB,GAAGC,GAAG,CAACC,eAAe,CAAC,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;QACpEZ,qBAAqB,CAACS,iBAAiB,CAAC;MAC1C,CAAC,MAAM;QACLH,OAAO,CAACO,KAAK,CAAC,wCAAwC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA;MAAKyB,GAAG,EAAElB,wBAAyB;MAACmB,GAAG,EAAC;IAAiB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACrB,EAAA,CArCQF,qBAAqB;AAAA0B,EAAA,GAArB1B,qBAAqB;AAuC9B,eAAeA,qBAAqB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}