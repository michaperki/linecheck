{"ast":null,"code":"import _toConsumableArray from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/root/Projects/linecheck/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import VideoUploadComponent from'./components/VideoUploadComponent';import VideoPreviewComponent from'./components/VideoPreviewComponent';import GridSelectionComponent from'./components/GridSelectionComponent';import ColorSelectionComponent from'./components/ColorSelectionComponent';import SubmitButton from'./components/SubmitButton';import ProcessingFeedbackComponent from'./components/ProcessingFeedbackComponent';import DataDisplayComponent from'./components/DataDisplayComponent';import MultipleSelectionSupport from'./components/MultipleSelectionSupport';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),videoURL=_useState2[0],setVideoURL=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedCells=_useState4[0],setSelectedCells=_useState4[1];var _useState5=useState('red'),_useState6=_slicedToArray(_useState5,2),selectedColor=_useState6[0],setSelectedColor=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),processing=_useState8[0],setProcessing=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),processedData=_useState10[0],setProcessedData=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),multipleSelection=_useState12[0],setMultipleSelection=_useState12[1];// Define your component logic and event handlers here\nvar handleVideoUpload=function handleVideoUpload(videoURL){setVideoURL(videoURL);};var handleCellClick=function handleCellClick(cell){if(multipleSelection){if(selectedCells.includes(cell)){setSelectedCells(selectedCells.filter(function(c){return c!==cell;}));}else{setSelectedCells([].concat(_toConsumableArray(selectedCells),[cell]));}}else{setSelectedCells([cell]);}};var handleSelectColor=function handleSelectColor(color){setSelectedColor(color);};var handleProcessClick=function handleProcessClick(){setProcessing(true);setProcessedData(null);fetch('http://localhost:5000/process_video',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({videoURL:videoURL,selectedCells:selectedCells,selectedColor:selectedColor})}).then(function(response){return response.json();}).then(function(data){setProcessing(false);setProcessedData(data);});};var handleToggleMultipleSelection=function handleToggleMultipleSelection(){setMultipleSelection(!multipleSelection);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Video Processing App\"}),/*#__PURE__*/_jsx(VideoUploadComponent,{onVideoUpload:handleVideoUpload}),videoURL&&/*#__PURE__*/_jsx(VideoPreviewComponent,{videoURL:videoURL}),videoURL&&/*#__PURE__*/_jsx(GridSelectionComponent,{onCellClick:handleCellClick,multipleSelection:multipleSelection}),/*#__PURE__*/_jsx(ColorSelectionComponent,{selectedColor:selectedColor,onSelectColor:handleSelectColor}),videoURL&&selectedCells.length>0&&/*#__PURE__*/_jsx(SubmitButton,{onClick:handleProcessClick}),processing&&/*#__PURE__*/_jsx(ProcessingFeedbackComponent,{}),processedData&&/*#__PURE__*/_jsx(DataDisplayComponent,{data:processedData}),/*#__PURE__*/_jsx(MultipleSelectionSupport,{onToggleMultipleSelection:handleToggleMultipleSelection,multipleSelection:multipleSelection})]});}export default App;","map":{"version":3,"names":["React","useState","VideoUploadComponent","VideoPreviewComponent","GridSelectionComponent","ColorSelectionComponent","SubmitButton","ProcessingFeedbackComponent","DataDisplayComponent","MultipleSelectionSupport","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","videoURL","setVideoURL","_useState3","_useState4","selectedCells","setSelectedCells","_useState5","_useState6","selectedColor","setSelectedColor","_useState7","_useState8","processing","setProcessing","_useState9","_useState10","processedData","setProcessedData","_useState11","_useState12","multipleSelection","setMultipleSelection","handleVideoUpload","handleCellClick","cell","includes","filter","c","concat","_toConsumableArray","handleSelectColor","color","handleProcessClick","fetch","method","headers","body","JSON","stringify","then","response","json","data","handleToggleMultipleSelection","className","children","onVideoUpload","onCellClick","onSelectColor","length","onClick","onToggleMultipleSelection"],"sources":["/root/Projects/linecheck/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport VideoUploadComponent from './components/VideoUploadComponent';\nimport VideoPreviewComponent from './components/VideoPreviewComponent';\nimport GridSelectionComponent from './components/GridSelectionComponent';\nimport ColorSelectionComponent from './components/ColorSelectionComponent';\nimport SubmitButton from './components/SubmitButton';\nimport ProcessingFeedbackComponent from './components/ProcessingFeedbackComponent';\nimport DataDisplayComponent from './components/DataDisplayComponent';\nimport MultipleSelectionSupport from './components/MultipleSelectionSupport';\n\nfunction App() {\n  const [videoURL, setVideoURL] = useState(null);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [selectedColor, setSelectedColor] = useState('red');\n  const [processing, setProcessing] = useState(false);\n  const [processedData, setProcessedData] = useState(null);\n  const [multipleSelection, setMultipleSelection] = useState(false);\n\n  // Define your component logic and event handlers here\n\n  const handleVideoUpload = (videoURL) => {\n    setVideoURL(videoURL);\n  };\n\n  const handleCellClick = (cell) => {\n    if (multipleSelection) {\n      if (selectedCells.includes(cell)) {\n        setSelectedCells(selectedCells.filter((c) => c !== cell));\n      } else {\n        setSelectedCells([...selectedCells, cell]);\n      }\n    } else {\n      setSelectedCells([cell]);\n    }\n  };\n\n  const handleSelectColor = (color) => {\n    setSelectedColor(color);\n  };\n\n  const handleProcessClick = () => {\n    setProcessing(true);\n    setProcessedData(null);\n\n    fetch('http://localhost:5000/process_video', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        videoURL,\n        selectedCells,\n        selectedColor,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setProcessing(false);\n        setProcessedData(data);\n      });\n  };\n\n  const handleToggleMultipleSelection = () => {\n    setMultipleSelection(!multipleSelection);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Video Processing App</h1>\n\n      {/* Video upload component */}\n      <VideoUploadComponent onVideoUpload={handleVideoUpload} />\n\n      {/* Video preview component */}\n      {videoURL && <VideoPreviewComponent videoURL={videoURL} />}\n\n      {/* Grid selection component */}\n      {videoURL && (\n        <GridSelectionComponent\n          onCellClick={handleCellClick}\n          multipleSelection={multipleSelection}\n        />\n      )}\n\n      {/* Color selection component */}\n      <ColorSelectionComponent\n        selectedColor={selectedColor}\n        onSelectColor={handleSelectColor}\n      />\n\n      {/* Submit button */}\n      {videoURL && selectedCells.length > 0 && (\n        <SubmitButton onClick={handleProcessClick} />\n      )}\n\n      {/* Processing feedback component */}\n      {processing && <ProcessingFeedbackComponent />}\n\n      {/* Processed data display component */}\n      {processedData && <DataDisplayComponent data={processedData} />}\n      \n      {/* Multiple selection support */}\n      <MultipleSelectionSupport\n        onToggleMultipleSelection={handleToggleMultipleSelection}\n        multipleSelection={multipleSelection}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"sPAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,oBAAoB,KAAM,mCAAmC,CACpE,MAAO,CAAAC,qBAAqB,KAAM,oCAAoC,CACtE,MAAO,CAAAC,sBAAsB,KAAM,qCAAqC,CACxE,MAAO,CAAAC,uBAAuB,KAAM,sCAAsC,CAC1E,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,2BAA2B,KAAM,0CAA0C,CAClF,MAAO,CAAAC,oBAAoB,KAAM,mCAAmC,CACpE,MAAO,CAAAC,wBAAwB,KAAM,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7E,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAgCd,QAAQ,CAAC,IAAI,CAAC,CAAAe,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAA0CnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/CE,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IACtC,IAAAG,UAAA,CAA0CvB,QAAQ,CAAC,KAAK,CAAC,CAAAwB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAlDE,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IACtC,IAAAG,UAAA,CAAoC3B,QAAQ,CAAC,KAAK,CAAC,CAAA4B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA5CE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAChC,IAAAG,UAAA,CAA0C/B,QAAQ,CAAC,IAAI,CAAC,CAAAgC,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAAjDE,aAAa,CAAAD,WAAA,IAAEE,gBAAgB,CAAAF,WAAA,IACtC,IAAAG,WAAA,CAAkDnC,QAAQ,CAAC,KAAK,CAAC,CAAAoC,WAAA,CAAApB,cAAA,CAAAmB,WAAA,IAA1DE,iBAAiB,CAAAD,WAAA,IAAEE,oBAAoB,CAAAF,WAAA,IAE9C;AAEA,GAAM,CAAAG,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAItB,QAAQ,CAAK,CACtCC,WAAW,CAACD,QAAQ,CAAC,CACvB,CAAC,CAED,GAAM,CAAAuB,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,IAAI,CAAK,CAChC,GAAIJ,iBAAiB,CAAE,CACrB,GAAIhB,aAAa,CAACqB,QAAQ,CAACD,IAAI,CAAC,CAAE,CAChCnB,gBAAgB,CAACD,aAAa,CAACsB,MAAM,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,GAAKH,IAAI,GAAC,CAAC,CAC3D,CAAC,IAAM,CACLnB,gBAAgB,IAAAuB,MAAA,CAAAC,kBAAA,CAAKzB,aAAa,GAAEoB,IAAI,EAAC,CAAC,CAC5C,CACF,CAAC,IAAM,CACLnB,gBAAgB,CAAC,CAACmB,IAAI,CAAC,CAAC,CAC1B,CACF,CAAC,CAED,GAAM,CAAAM,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,KAAK,CAAK,CACnCtB,gBAAgB,CAACsB,KAAK,CAAC,CACzB,CAAC,CAED,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/BnB,aAAa,CAAC,IAAI,CAAC,CACnBI,gBAAgB,CAAC,IAAI,CAAC,CAEtBgB,KAAK,CAAC,qCAAqC,CAAE,CAC3CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBtC,QAAQ,CAARA,QAAQ,CACRI,aAAa,CAAbA,aAAa,CACbI,aAAa,CAAbA,aACF,CAAC,CACH,CAAC,CAAC,CACC+B,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACnCF,IAAI,CAAC,SAACG,IAAI,CAAK,CACd7B,aAAa,CAAC,KAAK,CAAC,CACpBI,gBAAgB,CAACyB,IAAI,CAAC,CACxB,CAAC,CAAC,CACN,CAAC,CAED,GAAM,CAAAC,6BAA6B,CAAG,QAAhC,CAAAA,6BAA6BA,CAAA,CAAS,CAC1CtB,oBAAoB,CAAC,CAACD,iBAAiB,CAAC,CAC1C,CAAC,CAED,mBACEzB,KAAA,QAAKiD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpD,IAAA,OAAAoD,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAG7BpD,IAAA,CAACT,oBAAoB,EAAC8D,aAAa,CAAExB,iBAAkB,CAAE,CAAC,CAGzDtB,QAAQ,eAAIP,IAAA,CAACR,qBAAqB,EAACe,QAAQ,CAAEA,QAAS,CAAE,CAAC,CAGzDA,QAAQ,eACPP,IAAA,CAACP,sBAAsB,EACrB6D,WAAW,CAAExB,eAAgB,CAC7BH,iBAAiB,CAAEA,iBAAkB,CACtC,CACF,cAGD3B,IAAA,CAACN,uBAAuB,EACtBqB,aAAa,CAAEA,aAAc,CAC7BwC,aAAa,CAAElB,iBAAkB,CAClC,CAAC,CAGD9B,QAAQ,EAAII,aAAa,CAAC6C,MAAM,CAAG,CAAC,eACnCxD,IAAA,CAACL,YAAY,EAAC8D,OAAO,CAAElB,kBAAmB,CAAE,CAC7C,CAGApB,UAAU,eAAInB,IAAA,CAACJ,2BAA2B,GAAE,CAAC,CAG7C2B,aAAa,eAAIvB,IAAA,CAACH,oBAAoB,EAACoD,IAAI,CAAE1B,aAAc,CAAE,CAAC,cAG/DvB,IAAA,CAACF,wBAAwB,EACvB4D,yBAAyB,CAAER,6BAA8B,CACzDvB,iBAAiB,CAAEA,iBAAkB,CACtC,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAxB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}