{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/RegionSelector.js\",\n  _s = $RefreshSig$();\n// RegionSelector.js\nimport React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionSelector = ({\n  firstFrameUrl,\n  handleGridSelection\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    videoId\n  } = useParams();\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCards, setSelectedSquaresHoleCards] = useState([]);\n  const [currentMode, setCurrentMode] = useState(\"Stack\"); // Initial mode is \"Stack\"\n\n  const handleSquareClick = squareIndex => {\n    if (currentMode === \"Stack\") {\n      if (selectedSquaresStack.includes(squareIndex)) {\n        setSelectedSquaresStack(selectedSquaresStack.filter(index => index !== squareIndex));\n      } else {\n        setSelectedSquaresStack([...selectedSquaresStack, squareIndex]);\n      }\n    } else if (currentMode === \"HoleCards\") {\n      if (selectedSquaresHoleCards.includes(squareIndex)) {\n        setSelectedSquaresHoleCards(selectedSquaresHoleCards.filter(index => index !== squareIndex));\n      } else {\n        setSelectedSquaresHoleCards([...selectedSquaresHoleCards, squareIndex]);\n      }\n    }\n  };\n  const handleClear = () => {\n    if (currentMode === \"Stack\") {\n      setSelectedSquaresStack([]);\n    } else if (currentMode === \"HoleCards\") {\n      setSelectedSquaresHoleCards([]);\n    }\n  };\n  const handleSubmit = () => {\n    // Combine the selected squares from both modes into a data structure that the backend expects\n    const selectedSquares = [...selectedSquaresStack.map(index => ({\n      index,\n      type: \"Stack\"\n    })), ...selectedSquaresHoleCards.map(index => ({\n      index,\n      type: \"HoleCards\"\n    }))];\n    console.log(selectedSquares);\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares, currentMode); // Pass mode to the handler\n      navigate(`/data/${videoId}`);\n    } else {\n      alert('Please select at least one square.');\n    }\n  };\n  const handleModeChange = mode => {\n    setCurrentMode(mode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"region-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt\",\n      children: currentMode === \"Stack\" ? \"Select Stack\" : \"Select Hole Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"Stack\"),\n      children: \"Select Stack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModeChange(\"HoleCards\"),\n      children: \"Select Hole Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      firstFrameUrl: firstFrameUrl,\n      selectedSquares: currentMode === \"Stack\" ? selectedSquaresStack : selectedSquaresHoleCards,\n      onSquareClick: handleSquareClick,\n      currentMode: currentMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      disabled: currentMode === \"Stack\" && selectedSquaresStack.length === 0 || currentMode === \"HoleCards\" && selectedSquaresHoleCards.length === 0,\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionSelector, \"O3DIxwtoHXf0DEejYLpg6lS98kc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = RegionSelector;\nexport default RegionSelector;\nvar _c;\n$RefreshReg$(_c, \"RegionSelector\");","map":{"version":3,"names":["React","useState","ImageDisplay","useNavigate","useParams","jsxDEV","_jsxDEV","RegionSelector","firstFrameUrl","handleGridSelection","_s","navigate","videoId","selectedSquaresStack","setSelectedSquaresStack","selectedSquaresHoleCards","setSelectedSquaresHoleCards","currentMode","setCurrentMode","handleSquareClick","squareIndex","includes","filter","index","handleClear","handleSubmit","selectedSquares","map","type","console","log","length","alert","handleModeChange","mode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSquareClick","disabled","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/RegionSelector.js"],"sourcesContent":["// RegionSelector.js\nimport React, { useState } from \"react\";\nimport ImageDisplay from \"./ImageDisplay\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst RegionSelector = ({ firstFrameUrl, handleGridSelection }) => {\n  const navigate = useNavigate();\n\n  const { videoId } = useParams();\n\n  const [selectedSquaresStack, setSelectedSquaresStack] = useState([]);\n  const [selectedSquaresHoleCards, setSelectedSquaresHoleCards] = useState([]);\n  const [currentMode, setCurrentMode] = useState(\"Stack\"); // Initial mode is \"Stack\"\n\n  const handleSquareClick = (squareIndex) => {\n    if (currentMode === \"Stack\") {\n      if (selectedSquaresStack.includes(squareIndex)) {\n        setSelectedSquaresStack(selectedSquaresStack.filter(index => index !== squareIndex));\n      } else {\n        setSelectedSquaresStack([...selectedSquaresStack, squareIndex]);\n      }\n    } else if (currentMode === \"HoleCards\") {\n      if (selectedSquaresHoleCards.includes(squareIndex)) {\n        setSelectedSquaresHoleCards(selectedSquaresHoleCards.filter(index => index !== squareIndex));\n      } else {\n        setSelectedSquaresHoleCards([...selectedSquaresHoleCards, squareIndex]);\n      }\n    }\n  };\n\n  const handleClear = () => {\n    if (currentMode === \"Stack\") {\n      setSelectedSquaresStack([]);\n    } else if (currentMode === \"HoleCards\") {\n      setSelectedSquaresHoleCards([]);\n    }\n  };\n\n  const handleSubmit = () => {\n    // Combine the selected squares from both modes into a data structure that the backend expects\n    const selectedSquares = [\n      ...selectedSquaresStack.map(index => ({ index, type: \"Stack\" })),\n      ...selectedSquaresHoleCards.map(index => ({ index, type: \"HoleCards\" }))\n    ];\n\n    console.log(selectedSquares);    \n\n    if (selectedSquares.length > 0) {\n      handleGridSelection(selectedSquares, currentMode); // Pass mode to the handler\n      navigate(`/data/${videoId}`);\n    } else {\n      alert('Please select at least one square.');\n    }\n  };\n\n  const handleModeChange = (mode) => {\n    setCurrentMode(mode);\n  };\n\n  return (\n    <div className=\"region-selector\">\n      <h3>Select Regions</h3>\n      <div className=\"prompt\">\n        {currentMode === \"Stack\" ? \"Select Stack\" : \"Select Hole Cards\"}\n      </div>\n      <button onClick={() => handleModeChange(\"Stack\")}>Select Stack</button>\n      <button onClick={() => handleModeChange(\"HoleCards\")}>Select Hole Cards</button>\n      <button onClick={handleClear}>Clear</button>\n      <ImageDisplay\n        firstFrameUrl={firstFrameUrl}\n        selectedSquares={\n          currentMode === \"Stack\" ? selectedSquaresStack : selectedSquaresHoleCards\n        }\n        onSquareClick={handleSquareClick}\n        currentMode={currentMode}\n      />\n      <button\n        className=\"submit-button\"\n        disabled={\n          (currentMode === \"Stack\" && selectedSquaresStack.length === 0) ||\n          (currentMode === \"HoleCards\" && selectedSquaresHoleCards.length === 0)\n        }\n        onClick={handleSubmit}\n      >\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default RegionSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}