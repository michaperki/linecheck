{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/ImageDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/ImageDisplay.js\n\nimport React, { useState } from 'react';\nimport { sendGridSelection } from '../utils/mockApiUtils';\nimport './ImageDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDisplay = ({\n  firstFrameUrl\n}) => {\n  _s();\n  const [selectedQuadrants, setSelectedQuadrants] = useState([]);\n  const handleQuadrantClick = quadrantIndex => {\n    if (!selectedQuadrants.includes(quadrantIndex)) {\n      setSelectedQuadrants([...selectedQuadrants, quadrantIndex]);\n    }\n  };\n  const handleSubmit = async () => {\n    // Call the mock API function to send the selected quadrants\n    const response = await sendGridSelection(selectedQuadrants);\n    if (response.success) {\n      // Handle success (e.g., show a success message)\n      setSelectedQuadrants([]); // Clear selected quadrants\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: firstFrameUrl,\n      alt: \"First Frame\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageDisplay, \"Qm0PrdAuLwtIlMMA2Q+HbKt+TWc=\");\n_c = ImageDisplay;\nexport default ImageDisplay;\nvar _c;\n$RefreshReg$(_c, \"ImageDisplay\");","map":{"version":3,"names":["React","useState","sendGridSelection","jsxDEV","_jsxDEV","ImageDisplay","firstFrameUrl","_s","selectedQuadrants","setSelectedQuadrants","handleQuadrantClick","quadrantIndex","includes","handleSubmit","response","success","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/ImageDisplay.js"],"sourcesContent":["// src/components/ImageDisplay.js\n\nimport React, { useState } from 'react';\nimport { sendGridSelection } from '../utils/mockApiUtils';\nimport './ImageDisplay.css';\n\nconst ImageDisplay = ({ firstFrameUrl }) => {\n  const [selectedQuadrants, setSelectedQuadrants] = useState([]);\n\n  const handleQuadrantClick = (quadrantIndex) => {\n    if (!selectedQuadrants.includes(quadrantIndex)) {\n      setSelectedQuadrants([...selectedQuadrants, quadrantIndex]);\n    }\n  };\n\n  const handleSubmit = async () => {\n    // Call the mock API function to send the selected quadrants\n    const response = await sendGridSelection(selectedQuadrants);\n\n    if (response.success) {\n      // Handle success (e.g., show a success message)\n      setSelectedQuadrants([]); // Clear selected quadrants\n    }\n  };\n\n  return (\n    <div className=\"image-display\">\n      {/* Render quadrants and handle clicks */}\n      <img src={firstFrameUrl} alt=\"First Frame\" />\n\n      {/* Render the submit button */}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default ImageDisplay;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,mBAAmB,GAAIC,aAAa,IAAK;IAC7C,IAAI,CAACH,iBAAiB,CAACI,QAAQ,CAACD,aAAa,CAAC,EAAE;MAC9CF,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAEG,aAAa,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,QAAQ,GAAG,MAAMZ,iBAAiB,CAACM,iBAAiB,CAAC;IAE3D,IAAIM,QAAQ,CAACC,OAAO,EAAE;MACpB;MACAN,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAE5Bb,OAAA;MAAKc,GAAG,EAAEZ,aAAc;MAACa,GAAG,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG7CnB,OAAA;MAAQoB,OAAO,EAAEX,YAAa;MAAAI,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA8BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}