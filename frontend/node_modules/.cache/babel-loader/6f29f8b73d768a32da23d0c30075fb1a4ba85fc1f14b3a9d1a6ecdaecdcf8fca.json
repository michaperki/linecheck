{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/RegionSelector.js\",\n  _s = $RefreshSig$();\n// src/components/RegionSelector.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionSelector = () => {\n  _s();\n  const [selectedRegions, setSelectedRegions] = useState([]);\n  const handleRegionClick = event => {\n    const boundingRect = event.target.getBoundingClientRect();\n    const offsetX = event.clientX - boundingRect.left;\n    const offsetY = event.clientY - boundingRect.top;\n\n    // Create a new region object with the clicked coordinates\n    const newRegion = {\n      x: offsetX,\n      y: offsetY\n    };\n    setSelectedRegions([...selectedRegions, newRegion]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"region-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      onClick: handleRegionClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: firstFrameUrl,\n        alt: \"First Frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), selectedRegions.map((region, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-region\",\n        style: {\n          left: region.x,\n          top: region.y\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionSelector, \"42j28gRX2M5J1j0ZiWd7WoFuJlM=\");\n_c = RegionSelector;\nexport default RegionSelector;\nvar _c;\n$RefreshReg$(_c, \"RegionSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegionSelector","_s","selectedRegions","setSelectedRegions","handleRegionClick","event","boundingRect","target","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","newRegion","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","firstFrameUrl","alt","map","region","index","style","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/RegionSelector.js"],"sourcesContent":["// src/components/RegionSelector.js\n\nimport React, { useState } from 'react';\n\nconst RegionSelector = () => {\n  const [selectedRegions, setSelectedRegions] = useState([]);\n\n  const handleRegionClick = (event) => {\n    const boundingRect = event.target.getBoundingClientRect();\n    const offsetX = event.clientX - boundingRect.left;\n    const offsetY = event.clientY - boundingRect.top;\n\n    // Create a new region object with the clicked coordinates\n    const newRegion = { x: offsetX, y: offsetY };\n    \n    setSelectedRegions([...selectedRegions, newRegion]);\n  };\n\n  return (\n    <div className=\"region-selector\">\n      <h3>Select Regions</h3>\n      <div\n        className=\"image-container\"\n        onClick={handleRegionClick}\n      >\n        <img src={firstFrameUrl} alt=\"First Frame\" />\n        {/* Render selected regions as transparent divs */}\n        {selectedRegions.map((region, index) => (\n          <div\n            key={index}\n            className=\"selected-region\"\n            style={{ left: region.x, top: region.y }}\n          ></div>\n        ))}\n      </div>\n      <div className=\"selected-regions\">\n        {/* Display the list of selected regions */}\n      </div>\n    </div>\n  );\n};\n\nexport default RegionSelector;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,qBAAqB,CAAC,CAAC;IACzD,MAAMC,OAAO,GAAGJ,KAAK,CAACK,OAAO,GAAGJ,YAAY,CAACK,IAAI;IACjD,MAAMC,OAAO,GAAGP,KAAK,CAACQ,OAAO,GAAGP,YAAY,CAACQ,GAAG;;IAEhD;IACA,MAAMC,SAAS,GAAG;MAAEC,CAAC,EAAEP,OAAO;MAAEQ,CAAC,EAAEL;IAAQ,CAAC;IAE5CT,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEa,SAAS,CAAC,CAAC;EACrD,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MACEmB,SAAS,EAAC,iBAAiB;MAC3BM,OAAO,EAAEpB,iBAAkB;MAAAe,QAAA,gBAE3BpB,OAAA;QAAK0B,GAAG,EAAEC,aAAc;QAACC,GAAG,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE5CrB,eAAe,CAAC0B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjC/B,OAAA;QAEEmB,SAAS,EAAC,iBAAiB;QAC3Ba,KAAK,EAAE;UAAEpB,IAAI,EAAEkB,MAAM,CAACb,CAAC;UAAEF,GAAG,EAAEe,MAAM,CAACZ;QAAE;MAAE,GAFpCa,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCID,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}