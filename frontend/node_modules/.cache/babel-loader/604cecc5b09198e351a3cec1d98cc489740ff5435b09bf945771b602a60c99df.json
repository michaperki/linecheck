{"ast":null,"code":"var _jsxFileName = \"/root/Projects/linecheck/frontend/src/components/VideoUploader.js\",\n  _s = $RefreshSig$();\n// src/components/VideoUploader.js\n\nimport React, { useState } from 'react';\nimport { uploadVideo } from '../utils/mockApiUtils'; // Replace with actual API utils\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      setUploading(true);\n      try {\n        const response = await uploadVideo(selectedFile); // Replace with actual API call\n        console.log('Video uploaded:', response);\n\n        // Reset the form after successful upload\n        setSelectedFile(null);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading || !selectedFile,\n      children: uploading ? 'Uploading...' : 'Upload Video'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoUploader, \"zFBtUY+ZmES1gzjprTcf9LKUt5A=\");\n_c = VideoUploader;\nexport default VideoUploader;\nvar _c;\n$RefreshReg$(_c, \"VideoUploader\");","map":{"version":3,"names":["React","useState","uploadVideo","jsxDEV","_jsxDEV","VideoUploader","_s","selectedFile","setSelectedFile","uploading","setUploading","handleFileChange","event","target","files","handleUpload","response","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/root/Projects/linecheck/frontend/src/components/VideoUploader.js"],"sourcesContent":["// src/components/VideoUploader.js\n\nimport React, { useState } from 'react';\nimport { uploadVideo } from '../utils/mockApiUtils'; // Replace with actual API utils\n\nconst VideoUploader = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      setUploading(true);\n\n      try {\n        const response = await uploadVideo(selectedFile); // Replace with actual API call\n        console.log('Video uploaded:', response);\n\n        // Reset the form after successful upload\n        setSelectedFile(null);\n      } catch (error) {\n        console.error('Error uploading video:', error);\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Your Video</h2>\n      <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={uploading || !selectedFile}>\n        {uploading ? 'Uploading...' : 'Upload Video'}\n      </button>\n    </div>\n  );\n};\n\nexport default VideoUploader;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIR,YAAY,EAAE;MAChBG,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMd,WAAW,CAACK,YAAY,CAAC,CAAC,CAAC;QAClDU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;;QAExC;QACAR,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRT,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEhB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEpB,OAAA;MAAQwB,OAAO,EAAEb,YAAa;MAACc,QAAQ,EAAEpB,SAAS,IAAI,CAACF,YAAa;MAAAa,QAAA,EACjEX,SAAS,GAAG,cAAc,GAAG;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}