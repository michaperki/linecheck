[{"/root/Projects/linecheck/frontend/src/index.js":"1","/root/Projects/linecheck/frontend/src/App.js":"2","/root/Projects/linecheck/frontend/src/pages/UploadPage.js":"3","/root/Projects/linecheck/frontend/src/components/VideoUploader.js":"4","/root/Projects/linecheck/frontend/src/utils/mockApiUtils.js":"5","/root/Projects/linecheck/frontend/src/pages/HomePage.js":"6","/root/Projects/linecheck/frontend/src/pages/AnalysisPage.js":"7","/root/Projects/linecheck/frontend/src/components/RegionSelector.js":"8","/root/Projects/linecheck/frontend/src/components/ImageDisplay.js":"9","/root/Projects/linecheck/frontend/src/components/DataDisplay.js":"10","/root/Projects/linecheck/frontend/src/components/Header.js":"11"},{"size":232,"mtime":1693010833175,"results":"12","hashOfConfig":"13"},{"size":2387,"mtime":1693177526450,"results":"14","hashOfConfig":"13"},{"size":294,"mtime":1693099843855,"results":"15","hashOfConfig":"13"},{"size":1317,"mtime":1693099620244,"results":"16","hashOfConfig":"13"},{"size":3495,"mtime":1693178410006,"results":"17","hashOfConfig":"13"},{"size":229,"mtime":1693181794924,"results":"18","hashOfConfig":"13"},{"size":1002,"mtime":1693097874204,"results":"19","hashOfConfig":"13"},{"size":1598,"mtime":1693177503331,"results":"20","hashOfConfig":"13"},{"size":1092,"mtime":1693183377479,"results":"21","hashOfConfig":"13"},{"size":899,"mtime":1693178230086,"results":"22","hashOfConfig":"13"},{"size":595,"mtime":1693071866858,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"bfe203",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/root/Projects/linecheck/frontend/src/index.js",[],[],[],"/root/Projects/linecheck/frontend/src/App.js",["62","63"],[],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport UploadPage from \"./pages/UploadPage\";\nimport AnalysisPage from \"./pages/AnalysisPage\";\nimport DataDisplay from \"./components/DataDisplay\";\nimport Header from \"./components/Header\";\nimport { getFirstFrameUrl, generateVideoId, sendGridSelection } from \"./utils/mockApiUtils\"; // Import the necessary utility functions\n\nfunction App() {\n  const [firstFrameUrl, setFirstFrameUrl] = useState(null);\n  const [videoId, setVideoId] = useState(\"\"); // Initialize videoId as an empty string\n\n  useEffect(() => {\n    // Fetch the first frame URL and video ID when the component mounts\n    fetchFirstFrameData();\n  }, []);\n\n  const fetchFirstFrameData = async () => {\n    try {\n      // Simulate fetching data from the API\n      const response = await getFirstFrameUrl(videoId);\n\n      // Set the first frame URL and video ID in state\n      setFirstFrameUrl(response.url);\n      setVideoId(response.videoId);\n    } catch (error) {\n      console.error(\"Error fetching first frame data:\", error);\n    }\n  };\n\n  const handleGridSelection = async (selectedQuadrant) => {\n    try {\n      // Send grid selection to the backend\n      const response = await sendGridSelection(videoId, selectedQuadrant);\n      if (response.success) {\n        alert('Selection submitted successfully!');\n      }\n    } catch (error) {\n      console.error(\"Error sending grid selection:\", error);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/upload\" element={<UploadPage setVideoId={setVideoId}/>} />\n          <Route\n            path=\"/analysis\"\n            element={<AnalysisPage firstFrameUrl={firstFrameUrl} />}\n          />\n          <Route\n            path=\"/analysis/:videoId\"\n            element={\n              <AnalysisPage\n                firstFrameUrl={firstFrameUrl}\n                handleGridSelection={handleGridSelection}\n              />\n            }\n          />\n          <Route\n            path=\"/data/:videoId\"\n            element={<DataDisplay videoId={videoId} />} // Pass the generated video ID to DataDisplay\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/root/Projects/linecheck/frontend/src/pages/UploadPage.js",[],[],"/root/Projects/linecheck/frontend/src/components/VideoUploader.js",[],[],"/root/Projects/linecheck/frontend/src/utils/mockApiUtils.js",[],[],"/root/Projects/linecheck/frontend/src/pages/HomePage.js",["64"],[],"// src/pages/UploadPage.js\n\nimport React from 'react';\nimport VideoUploader from '../components/VideoUploader';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1>Home Page</h1>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/root/Projects/linecheck/frontend/src/pages/AnalysisPage.js",["65","66"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RegionSelector from \"../components/RegionSelector\";\nimport ImageDisplay from \"../components/ImageDisplay\";\nimport { getFirstFrameUrl } from \"../utils/mockApiUtils\";\n\nfunction AnalysisPage({ handleGridSelection }) {\n  const { videoId } = useParams();\n  const [firstFrameUrl, setFirstFrameUrl] = useState(null); // Declare firstFrameUrl state\n\n  useEffect(() => {\n    fetchFirstFrameUrl();\n  }, [videoId]);\n\n  const fetchFirstFrameUrl = async () => {\n    try {\n      const response = await getFirstFrameUrl(videoId);\n      setFirstFrameUrl(response); // Update the firstFrameUrl state\n    } catch (error) {\n      console.error(\"Error fetching first frame URL:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Analysis Page</h1>\n      <RegionSelector\n        firstFrameUrl={firstFrameUrl}\n        handleGridSelection={handleGridSelection}\n      />\n    </div>\n  );\n}\n\nexport default AnalysisPage;\n","/root/Projects/linecheck/frontend/src/components/RegionSelector.js",[],[],"/root/Projects/linecheck/frontend/src/components/ImageDisplay.js",[],[],"/root/Projects/linecheck/frontend/src/components/DataDisplay.js",["67"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOcrResults } from '../utils/mockApiUtils'; // Update with actual API function\n\nconst DataDisplay = () => {\n  const { videoId } = useParams();\n  const [ocrResults, setOcrResults] = useState(null);\n\n  useEffect(() => {\n    fetchOcrResults();\n  }, []);\n\n  const fetchOcrResults = async () => {\n    try {\n      const results = await getOcrResults(videoId);\n      console.log('Fetched OCR results:', results);\n      setOcrResults(results);\n    } catch (error) {\n      console.error('Error fetching OCR results:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Data Viewer</h2>\n      <h3>OCR Results</h3>\n      {ocrResults ? (\n        <pre>{JSON.stringify(ocrResults, null, 2)}</pre>\n      ) : (\n        <p>Loading OCR results...</p>\n      )}\n    </div>\n  );\n};\n\nexport default DataDisplay;\n","/root/Projects/linecheck/frontend/src/components/Header.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":8,"column":28,"nodeType":"70","messageId":"71","endLine":8,"endColumn":43},{"ruleId":"72","severity":1,"message":"73","line":17,"column":6,"nodeType":"74","endLine":17,"endColumn":8,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":21},{"ruleId":"68","severity":1,"message":"77","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":20},{"ruleId":"72","severity":1,"message":"78","line":13,"column":6,"nodeType":"74","endLine":13,"endColumn":15,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":11,"column":6,"nodeType":"74","endLine":11,"endColumn":8,"suggestions":"81"},"no-unused-vars","'generateVideoId' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFirstFrameData'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'VideoUploader' is defined but never used.","'ImageDisplay' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchFirstFrameUrl'. Either include it or remove the dependency array.",["83"],"React Hook useEffect has a missing dependency: 'fetchOcrResults'. Either include it or remove the dependency array.",["84"],{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [fetchFirstFrameData]",{"range":"91","text":"92"},"Update the dependencies array to be: [fetchFirstFrameUrl, videoId]",{"range":"93","text":"94"},"Update the dependencies array to be: [fetchOcrResults]",{"range":"95","text":"96"},[781,783],"[fetchFirstFrameData]",[498,507],"[fetchFirstFrameUrl, videoId]",[355,357],"[fetchOcrResults]"]